file(REMOVE_RECURSE
  ".qsb/scenegraph/shaders_ng/24bittextmask.frag.qsb"
  ".qsb/scenegraph/shaders_ng/32bitcolortext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/8bittextmask.frag.qsb"
  ".qsb/scenegraph/shaders_ng/8bittextmask_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldoutlinetext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldoutlinetext.vert.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldoutlinetext_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldoutlinetext_a_fwidth.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldoutlinetext_fwidth.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldshiftedtext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldshiftedtext.vert.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldshiftedtext_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldshiftedtext_a_fwidth.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldshiftedtext_fwidth.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldtext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldtext.vert.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldtext_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldtext_a_fwidth.frag.qsb"
  ".qsb/scenegraph/shaders_ng/distancefieldtext_fwidth.frag.qsb"
  ".qsb/scenegraph/shaders_ng/flatcolor.frag.qsb"
  ".qsb/scenegraph/shaders_ng/flatcolor.vert.qsb"
  ".qsb/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext.vert.qsb"
  ".qsb/scenegraph/shaders_ng/hiqsubpixeldistancefieldtext_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/loqsubpixeldistancefieldtext.vert.qsb"
  ".qsb/scenegraph/shaders_ng/loqsubpixeldistancefieldtext_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/opaquetexture.frag.qsb"
  ".qsb/scenegraph/shaders_ng/opaquetexture.vert.qsb"
  ".qsb/scenegraph/shaders_ng/outlinedtext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/outlinedtext.vert.qsb"
  ".qsb/scenegraph/shaders_ng/outlinedtext_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/shadereffect.frag.qsb"
  ".qsb/scenegraph/shaders_ng/shadereffect.vert.qsb"
  ".qsb/scenegraph/shaders_ng/smoothcolor.frag.qsb"
  ".qsb/scenegraph/shaders_ng/smoothcolor.vert.qsb"
  ".qsb/scenegraph/shaders_ng/smoothtexture.frag.qsb"
  ".qsb/scenegraph/shaders_ng/smoothtexture.vert.qsb"
  ".qsb/scenegraph/shaders_ng/sprite.frag.qsb"
  ".qsb/scenegraph/shaders_ng/sprite.vert.qsb"
  ".qsb/scenegraph/shaders_ng/stencilclip.frag.qsb"
  ".qsb/scenegraph/shaders_ng/stencilclip.vert.qsb"
  ".qsb/scenegraph/shaders_ng/styledtext.frag.qsb"
  ".qsb/scenegraph/shaders_ng/styledtext.vert.qsb"
  ".qsb/scenegraph/shaders_ng/styledtext_a.frag.qsb"
  ".qsb/scenegraph/shaders_ng/textmask.frag.qsb"
  ".qsb/scenegraph/shaders_ng/textmask.vert.qsb"
  ".qsb/scenegraph/shaders_ng/texture.frag.qsb"
  ".qsb/scenegraph/shaders_ng/texture.vert.qsb"
  ".qsb/scenegraph/shaders_ng/vertexcolor.frag.qsb"
  ".qsb/scenegraph/shaders_ng/vertexcolor.vert.qsb"
  ".qsb/scenegraph/shaders_ng/visualization.frag.qsb"
  ".qsb/scenegraph/shaders_ng/visualization.vert.qsb"
)

# Per-language clean rules from dependency scanning.
foreach(lang )
  include(CMakeFiles/Quick_other_files.dir/cmake_clean_${lang}.cmake OPTIONAL)
endforeach()
